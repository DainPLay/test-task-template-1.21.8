plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
	id 'com.google.protobuf' version '0.9.4'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven {
		name = "Fabric"
		url = "https://maven.fabricmc.net/"
	}
}

tasks.withType(ProcessResources).configureEach {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

dependencies {
	// Minecraft и Fabric
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Protobuf
	implementation 'com.google.protobuf:protobuf-java:3.25.1'
	include 'com.google.protobuf:protobuf-java:3.25.1'

	// Database - Hibernate с PostgreSQL
	implementation 'org.hibernate:hibernate-core:6.5.2.Final'
	implementation 'org.hibernate:hibernate-c3p0:6.5.2.Final'
	implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'com.mchange:c3p0:0.9.5.5'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1'

	include 'org.hibernate:hibernate-core:6.5.2.Final'
	include 'org.hibernate:hibernate-c3p0:6.5.2.Final'
	include 'org.postgresql:postgresql:42.6.0'
	include 'com.mchange:c3p0:0.9.5.5'
	include 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	include 'jakarta.transaction:jakarta.transaction-api:2.0.1'
}

sourceSets {
	main {
		proto {
			srcDir 'src/main/proto'
		}
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.25.1"
	}
	generateProtoTasks {
		all().each { task ->
			task.builtins {
				java {
					option "lite"
				}
			}
		}
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
}

java.withSourcesJar()

jar {
	from "src/generated/source/proto/main/java"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			url "file:///${project.projectDir}/repo"
		}
	}
}

configurations.all {
	resolutionStrategy {
	}
}